
module ndff_n8_0 ( Clk, Rst, E, d, \output  );
  input [7:0] d;
  output [7:0] \output ;
  input Clk, Rst, E;
  wire   n2, n3, n4, n5, n6, n7, n8, n10, n1, n9;
  tri   [7:0] d;

  DFFARX1 \output_reg[7]  ( .D(n10), .CLK(Clk), .RSTB(n1), .Q(\output [7]) );
  DFFARX1 \output_reg[6]  ( .D(n8), .CLK(Clk), .RSTB(n1), .Q(\output [6]) );
  DFFARX1 \output_reg[5]  ( .D(n7), .CLK(Clk), .RSTB(n1), .Q(\output [5]) );
  DFFARX1 \output_reg[4]  ( .D(n6), .CLK(Clk), .RSTB(n1), .Q(\output [4]) );
  DFFARX1 \output_reg[3]  ( .D(n5), .CLK(Clk), .RSTB(n1), .Q(\output [3]) );
  DFFARX1 \output_reg[2]  ( .D(n4), .CLK(Clk), .RSTB(n1), .Q(\output [2]) );
  DFFARX1 \output_reg[1]  ( .D(n3), .CLK(Clk), .RSTB(n1), .Q(\output [1]) );
  DFFARX1 \output_reg[0]  ( .D(n2), .CLK(Clk), .RSTB(n1), .Q(\output [0]) );
  AO22X1 U2 ( .IN1(d[0]), .IN2(E), .IN3(\output [0]), .IN4(n9), .Q(n2) );
  AO22X1 U3 ( .IN1(d[1]), .IN2(E), .IN3(\output [1]), .IN4(n9), .Q(n3) );
  AO22X1 U4 ( .IN1(d[2]), .IN2(E), .IN3(\output [2]), .IN4(n9), .Q(n4) );
  AO22X1 U5 ( .IN1(d[3]), .IN2(E), .IN3(\output [3]), .IN4(n9), .Q(n5) );
  AO22X1 U6 ( .IN1(d[4]), .IN2(E), .IN3(\output [4]), .IN4(n9), .Q(n6) );
  AO22X1 U7 ( .IN1(d[5]), .IN2(E), .IN3(\output [5]), .IN4(n9), .Q(n7) );
  AO22X1 U8 ( .IN1(d[6]), .IN2(E), .IN3(\output [6]), .IN4(n9), .Q(n8) );
  AO22X1 U10 ( .IN1(d[7]), .IN2(E), .IN3(\output [7]), .IN4(n9), .Q(n10) );
  INVX0 U9 ( .IN1(E), .QN(n9) );
  INVX0 U11 ( .IN1(Rst), .QN(n1) );
endmodule


module tsb_n8_0 ( E, Input, Output );
  input [7:0] Input;
  output [7:0] Output;
  input E;

  tri   [7:0] Output;

  TNBUFFX1 \Output_tri[0]  ( .IN(Input[0]), .ENB(E), .Q(Output[0]) );
  TNBUFFX1 \Output_tri[1]  ( .IN(Input[1]), .ENB(E), .Q(Output[1]) );
  TNBUFFX1 \Output_tri[2]  ( .IN(Input[2]), .ENB(E), .Q(Output[2]) );
  TNBUFFX1 \Output_tri[3]  ( .IN(Input[3]), .ENB(E), .Q(Output[3]) );
  TNBUFFX1 \Output_tri[4]  ( .IN(Input[4]), .ENB(E), .Q(Output[4]) );
  TNBUFFX1 \Output_tri[5]  ( .IN(Input[5]), .ENB(E), .Q(Output[5]) );
  TNBUFFX1 \Output_tri[6]  ( .IN(Input[6]), .ENB(E), .Q(Output[6]) );
  TNBUFFX1 \Output_tri[7]  ( .IN(Input[7]), .ENB(E), .Q(Output[7]) );
endmodule


module ndff_n8_2 ( Clk, Rst, E, d, \output  );
  input [7:0] d;
  output [7:0] \output ;
  input Clk, Rst, E;
  wire   n1, n9, n11, n12, n13, n14, n15, n16, n17, n18;
  tri   [7:0] d;

  DFFARX1 \output_reg[7]  ( .D(n11), .CLK(Clk), .RSTB(n1), .Q(\output [7]) );
  DFFARX1 \output_reg[6]  ( .D(n12), .CLK(Clk), .RSTB(n1), .Q(\output [6]) );
  DFFARX1 \output_reg[5]  ( .D(n13), .CLK(Clk), .RSTB(n1), .Q(\output [5]) );
  DFFARX1 \output_reg[4]  ( .D(n14), .CLK(Clk), .RSTB(n1), .Q(\output [4]) );
  DFFARX1 \output_reg[3]  ( .D(n15), .CLK(Clk), .RSTB(n1), .Q(\output [3]) );
  DFFARX1 \output_reg[2]  ( .D(n16), .CLK(Clk), .RSTB(n1), .Q(\output [2]) );
  DFFARX1 \output_reg[1]  ( .D(n17), .CLK(Clk), .RSTB(n1), .Q(\output [1]) );
  DFFARX1 \output_reg[0]  ( .D(n18), .CLK(Clk), .RSTB(n1), .Q(\output [0]) );
  AO22X1 U2 ( .IN1(d[0]), .IN2(E), .IN3(\output [0]), .IN4(n9), .Q(n18) );
  AO22X1 U3 ( .IN1(d[1]), .IN2(E), .IN3(\output [1]), .IN4(n9), .Q(n17) );
  AO22X1 U4 ( .IN1(d[2]), .IN2(E), .IN3(\output [2]), .IN4(n9), .Q(n16) );
  AO22X1 U5 ( .IN1(d[3]), .IN2(E), .IN3(\output [3]), .IN4(n9), .Q(n15) );
  AO22X1 U6 ( .IN1(d[4]), .IN2(E), .IN3(\output [4]), .IN4(n9), .Q(n14) );
  AO22X1 U7 ( .IN1(d[5]), .IN2(E), .IN3(\output [5]), .IN4(n9), .Q(n13) );
  AO22X1 U8 ( .IN1(d[6]), .IN2(E), .IN3(\output [6]), .IN4(n9), .Q(n12) );
  AO22X1 U10 ( .IN1(d[7]), .IN2(E), .IN3(\output [7]), .IN4(n9), .Q(n11) );
  INVX0 U9 ( .IN1(E), .QN(n9) );
  INVX0 U11 ( .IN1(Rst), .QN(n1) );
endmodule


module tsb_n8_2 ( E, Input, Output );
  input [7:0] Input;
  output [7:0] Output;
  input E;

  tri   [7:0] Output;

  TNBUFFX1 \Output_tri[0]  ( .IN(Input[0]), .ENB(E), .Q(Output[0]) );
  TNBUFFX1 \Output_tri[1]  ( .IN(Input[1]), .ENB(E), .Q(Output[1]) );
  TNBUFFX1 \Output_tri[2]  ( .IN(Input[2]), .ENB(E), .Q(Output[2]) );
  TNBUFFX1 \Output_tri[3]  ( .IN(Input[3]), .ENB(E), .Q(Output[3]) );
  TNBUFFX1 \Output_tri[4]  ( .IN(Input[4]), .ENB(E), .Q(Output[4]) );
  TNBUFFX1 \Output_tri[5]  ( .IN(Input[5]), .ENB(E), .Q(Output[5]) );
  TNBUFFX1 \Output_tri[6]  ( .IN(Input[6]), .ENB(E), .Q(Output[6]) );
  TNBUFFX1 \Output_tri[7]  ( .IN(Input[7]), .ENB(E), .Q(Output[7]) );
endmodule


module ndff_n8_1 ( Clk, Rst, E, d, \output  );
  input [7:0] d;
  output [7:0] \output ;
  input Clk, Rst, E;
  wire   n1, n9, n11, n12, n13, n14, n15, n16, n17, n18;
  tri   [7:0] d;

  DFFARX1 \output_reg[7]  ( .D(n11), .CLK(Clk), .RSTB(n1), .Q(\output [7]) );
  DFFARX1 \output_reg[6]  ( .D(n12), .CLK(Clk), .RSTB(n1), .Q(\output [6]) );
  DFFARX1 \output_reg[5]  ( .D(n13), .CLK(Clk), .RSTB(n1), .Q(\output [5]) );
  DFFARX1 \output_reg[4]  ( .D(n14), .CLK(Clk), .RSTB(n1), .Q(\output [4]) );
  DFFARX1 \output_reg[3]  ( .D(n15), .CLK(Clk), .RSTB(n1), .Q(\output [3]) );
  DFFARX1 \output_reg[2]  ( .D(n16), .CLK(Clk), .RSTB(n1), .Q(\output [2]) );
  DFFARX1 \output_reg[1]  ( .D(n17), .CLK(Clk), .RSTB(n1), .Q(\output [1]) );
  DFFARX1 \output_reg[0]  ( .D(n18), .CLK(Clk), .RSTB(n1), .Q(\output [0]) );
  AO22X1 U2 ( .IN1(d[0]), .IN2(E), .IN3(\output [0]), .IN4(n9), .Q(n18) );
  AO22X1 U3 ( .IN1(d[1]), .IN2(E), .IN3(\output [1]), .IN4(n9), .Q(n17) );
  AO22X1 U4 ( .IN1(d[2]), .IN2(E), .IN3(\output [2]), .IN4(n9), .Q(n16) );
  AO22X1 U5 ( .IN1(d[3]), .IN2(E), .IN3(\output [3]), .IN4(n9), .Q(n15) );
  AO22X1 U6 ( .IN1(d[4]), .IN2(E), .IN3(\output [4]), .IN4(n9), .Q(n14) );
  AO22X1 U7 ( .IN1(d[5]), .IN2(E), .IN3(\output [5]), .IN4(n9), .Q(n13) );
  AO22X1 U8 ( .IN1(d[6]), .IN2(E), .IN3(\output [6]), .IN4(n9), .Q(n12) );
  AO22X1 U10 ( .IN1(d[7]), .IN2(E), .IN3(\output [7]), .IN4(n9), .Q(n11) );
  INVX0 U9 ( .IN1(E), .QN(n9) );
  INVX0 U11 ( .IN1(Rst), .QN(n1) );
endmodule


module tsb_n8_1 ( E, Input, Output );
  input [7:0] Input;
  output [7:0] Output;
  input E;

  tri   [7:0] Output;

  TNBUFFX1 \Output_tri[0]  ( .IN(Input[0]), .ENB(E), .Q(Output[0]) );
  TNBUFFX1 \Output_tri[1]  ( .IN(Input[1]), .ENB(E), .Q(Output[1]) );
  TNBUFFX1 \Output_tri[2]  ( .IN(Input[2]), .ENB(E), .Q(Output[2]) );
  TNBUFFX1 \Output_tri[3]  ( .IN(Input[3]), .ENB(E), .Q(Output[3]) );
  TNBUFFX1 \Output_tri[4]  ( .IN(Input[4]), .ENB(E), .Q(Output[4]) );
  TNBUFFX1 \Output_tri[5]  ( .IN(Input[5]), .ENB(E), .Q(Output[5]) );
  TNBUFFX1 \Output_tri[6]  ( .IN(Input[6]), .ENB(E), .Q(Output[6]) );
  TNBUFFX1 \Output_tri[7]  ( .IN(Input[7]), .ENB(E), .Q(Output[7]) );
endmodule


module pwm_n8_DW01_inc_0 ( A, SUM );
  input [7:0] A;
  output [7:0] SUM;

  wire   [7:2] carry;

  HADDX1 U1_1_6 ( .A0(A[6]), .B0(carry[6]), .C1(carry[7]), .SO(SUM[6]) );
  HADDX1 U1_1_5 ( .A0(A[5]), .B0(carry[5]), .C1(carry[6]), .SO(SUM[5]) );
  HADDX1 U1_1_4 ( .A0(A[4]), .B0(carry[4]), .C1(carry[5]), .SO(SUM[4]) );
  HADDX1 U1_1_3 ( .A0(A[3]), .B0(carry[3]), .C1(carry[4]), .SO(SUM[3]) );
  HADDX1 U1_1_2 ( .A0(A[2]), .B0(carry[2]), .C1(carry[3]), .SO(SUM[2]) );
  HADDX1 U1_1_1 ( .A0(A[1]), .B0(A[0]), .C1(carry[2]), .SO(SUM[1]) );
  INVX0 U1 ( .IN(A[0]), .QN(SUM[0]) );
  XOR2X1 U2 ( .IN1(carry[7]), .IN2(A[7]), .Q(SUM[7]) );
endmodule


module pwm_n8 ( clk, rst, en, rd_wr, add_bus, data_bus, pwm_out, counter_test
 );
  input [7:0] add_bus;
  inout [7:0] data_bus;
  output [7:0] counter_test;
  input clk, rst, en, rd_wr;
  output pwm_out;
  wire   duration_rd, duration_wr, duty_cycle_rd, duty_cycle_wr, options_rd,
         options_wr, N23, N25, N26, N27, N28, N29, N30, N31, N32, N33, N34,
         N35, N36, N37, N38, N39, N40, n23, n24, n25, n26, n28, n29, n30, n31,
         n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45,
         n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59,
         n60, n61, n62, n63, n64, n65, n66, n67, n68, n69;
  wire   [7:0] duration;
  wire   [7:0] duty_cycle;
  wire   [7:0] options;
  tri   [7:0] data_bus;

  NAND4X0 U26 ( .IN1(add_bus[4]), .IN2(n24), .IN3(n69), .IN4(n67), .QN(n23) );
  NOR3X0 U27 ( .IN1(n69), .IN2(rd_wr), .IN3(n25), .QN(duty_cycle_wr) );
  NOR3X0 U28 ( .IN1(n69), .IN2(n65), .IN3(n25), .QN(duty_cycle_rd) );
  NOR3X0 U29 ( .IN1(n25), .IN2(rd_wr), .IN3(add_bus[0]), .QN(duration_wr) );
  NOR3X0 U30 ( .IN1(n25), .IN2(add_bus[0]), .IN3(n65), .QN(duration_rd) );
  NAND3X0 U31 ( .IN1(n24), .IN2(n66), .IN3(add_bus[3]), .QN(n25) );
  AND4X1 U32 ( .IN1(add_bus[6]), .IN2(n68), .IN3(en), .IN4(n26), .Q(n24) );
  NOR3X0 U33 ( .IN1(add_bus[2]), .IN2(add_bus[7]), .IN3(add_bus[5]), .QN(n26)
         );
  AND2X1 U34 ( .IN1(N32), .IN2(n63), .Q(N40) );
  AND2X1 U35 ( .IN1(N31), .IN2(n63), .Q(N39) );
  AND2X1 U36 ( .IN1(N30), .IN2(n63), .Q(N38) );
  AND2X1 U37 ( .IN1(N29), .IN2(n63), .Q(N37) );
  AND2X1 U38 ( .IN1(N28), .IN2(n63), .Q(N36) );
  AND2X1 U39 ( .IN1(N27), .IN2(n63), .Q(N35) );
  AND2X1 U40 ( .IN1(N26), .IN2(n63), .Q(N34) );
  OR2X1 U41 ( .IN1(N23), .IN2(N25), .Q(N33) );
  ndff_n8_0 u1 ( .Clk(clk), .Rst(rst), .E(duration_rd), .d(data_bus), 
        .\output (duration) );
  tsb_n8_0 u2 ( .E(duration_wr), .Input(duration), .Output(data_bus) );
  ndff_n8_2 u3 ( .Clk(clk), .Rst(rst), .E(duty_cycle_rd), .d(data_bus), 
        .\output (duty_cycle) );
  tsb_n8_2 u4 ( .E(duty_cycle_wr), .Input(duty_cycle), .Output(data_bus) );
  ndff_n8_1 u5 ( .Clk(clk), .Rst(rst), .E(options_rd), .d(data_bus), 
        .\output (options) );
  tsb_n8_1 u6 ( .E(options_wr), .Input(options), .Output(data_bus) );
  pwm_n8_DW01_inc_0 add_60 ( .A(counter_test), .SUM({N32, N31, N30, N29, N28, 
        N27, N26, N25}) );
  DFFNARX1 \counter_reg[0]  ( .D(N33), .CLK(clk), .RSTB(n29), .Q(
        counter_test[0]) );
  DFFNARX1 \counter_reg[1]  ( .D(N34), .CLK(clk), .RSTB(n29), .Q(
        counter_test[1]), .QN(n42) );
  DFFNARX1 \counter_reg[6]  ( .D(N39), .CLK(clk), .RSTB(n29), .Q(
        counter_test[6]) );
  DFFNARX1 \counter_reg[5]  ( .D(N38), .CLK(clk), .RSTB(n29), .Q(
        counter_test[5]) );
  DFFNARX1 \counter_reg[3]  ( .D(N36), .CLK(clk), .RSTB(n29), .Q(
        counter_test[3]) );
  DFFNARX1 \counter_reg[2]  ( .D(N35), .CLK(clk), .RSTB(n29), .Q(
        counter_test[2]) );
  DFFNARX1 \counter_reg[7]  ( .D(N40), .CLK(clk), .RSTB(n29), .Q(
        counter_test[7]) );
  DFFNARX1 \counter_reg[4]  ( .D(N37), .CLK(clk), .RSTB(n29), .Q(
        counter_test[4]) );
  DFFNARX1 pwm_out_reg ( .D(n28), .CLK(clk), .RSTB(n29), .Q(pwm_out) );
  INVX0 U42 ( .IN1(rst), .QN(n64) );
  INVX0 U43 ( .IN1(duty_cycle[7]), .QN(n62) );
  INVX0 U44 ( .IN1(N23), .QN(n63) );
  INVX0 U45 ( .IN1(n45), .QN(n55) );
  NOR2X0 U46 ( .IN1(n23), .IN2(n65), .QN(options_rd) );
  INVX0 U47 ( .IN1(duty_cycle[0]), .QN(n54) );
  INVX0 U48 ( .IN1(duty_cycle[1]), .QN(n56) );
  INVX0 U49 ( .IN1(duty_cycle[2]), .QN(n57) );
  INVX0 U50 ( .IN1(duty_cycle[5]), .QN(n60) );
  INVX0 U51 ( .IN1(duration[1]), .QN(n44) );
  AOI21X1 U52 ( .IN1(N40), .IN2(n62), .IN3(n53), .QN(n28) );
  INVX0 U53 ( .IN1(duration[0]), .QN(n43) );
  INVX0 U54 ( .IN1(duty_cycle[3]), .QN(n58) );
  INVX0 U55 ( .IN1(duty_cycle[4]), .QN(n59) );
  INVX0 U56 ( .IN1(duty_cycle[6]), .QN(n61) );
  INVX0 U57 ( .IN1(add_bus[3]), .QN(n67) );
  NOR2X0 U58 ( .IN1(rd_wr), .IN2(n23), .QN(options_wr) );
  INVX0 U59 ( .IN1(add_bus[4]), .QN(n66) );
  INVX0 U60 ( .IN1(add_bus[1]), .QN(n68) );
  INVX0 U61 ( .IN1(add_bus[0]), .QN(n69) );
  INVX0 U62 ( .IN1(rd_wr), .QN(n65) );
  AND2X1 U63 ( .IN1(options[0]), .IN2(n64), .Q(n29) );
  XNOR2X1 U64 ( .IN1(duration[6]), .IN2(counter_test[6]), .Q(n33) );
  XNOR2X1 U65 ( .IN1(duration[5]), .IN2(counter_test[5]), .Q(n32) );
  XNOR2X1 U66 ( .IN1(duration[4]), .IN2(counter_test[4]), .Q(n31) );
  XNOR2X1 U67 ( .IN1(duration[3]), .IN2(counter_test[3]), .Q(n30) );
  NAND4X0 U68 ( .IN1(n33), .IN2(n32), .IN3(n31), .IN4(n30), .QN(n41) );
  XNOR2X1 U69 ( .IN1(duration[2]), .IN2(counter_test[2]), .Q(n35) );
  XNOR2X1 U70 ( .IN1(duration[7]), .IN2(counter_test[7]), .Q(n34) );
  NAND2X0 U71 ( .IN1(n35), .IN2(n34), .QN(n40) );
  NOR2X0 U72 ( .IN1(n43), .IN2(counter_test[0]), .QN(n36) );
  OA22X1 U73 ( .IN1(duration[1]), .IN2(n36), .IN3(n36), .IN4(n42), .Q(n39) );
  AND2X1 U74 ( .IN1(counter_test[0]), .IN2(n43), .Q(n37) );
  OA22X1 U75 ( .IN1(n37), .IN2(n44), .IN3(counter_test[1]), .IN4(n37), .Q(n38)
         );
  NOR4X0 U76 ( .IN1(n41), .IN2(n40), .IN3(n39), .IN4(n38), .QN(N23) );
  AND2X1 U77 ( .IN1(n61), .IN2(N39), .Q(n52) );
  NAND2X0 U78 ( .IN1(N33), .IN2(n54), .QN(n45) );
  NOR2X0 U79 ( .IN1(duty_cycle[1]), .IN2(n45), .QN(n46) );
  OA222X1 U80 ( .IN1(N35), .IN2(n57), .IN3(N34), .IN4(n46), .IN5(n55), .IN6(
        n56), .Q(n47) );
  AO221X1 U81 ( .IN1(N35), .IN2(n57), .IN3(N36), .IN4(n58), .IN5(n47), .Q(n48)
         );
  OA221X1 U82 ( .IN1(N37), .IN2(n59), .IN3(N36), .IN4(n58), .IN5(n48), .Q(n49)
         );
  AO221X1 U83 ( .IN1(N37), .IN2(n59), .IN3(N38), .IN4(n60), .IN5(n49), .Q(n50)
         );
  OA221X1 U84 ( .IN1(N39), .IN2(n61), .IN3(N38), .IN4(n60), .IN5(n50), .Q(n51)
         );
  OA22X1 U85 ( .IN1(N40), .IN2(n62), .IN3(n52), .IN4(n51), .Q(n53) );
endmodule

